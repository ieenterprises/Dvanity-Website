import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogFooter,
} from "@/components/ui/dialog";
import {
  Facebook,
  Instagram,
  X,
  Linkedin,
  Youtube,
  Building2,
  Globe,
  ExternalLink,
  Plus,
  Trash,
  Edit,
} from "lucide-react";
import { useContent } from "@/context/ContentContext";
import { toast } from "@/components/ui/use-toast";

interface SocialLink {
  id: string;
  platform: string;
  url: string;
}

const SocialLinksManager = () => {
  const { content, addSocialLink, updateSocialLink, deleteSocialLink } =
    useContent();
  const [isAddingLink, setIsAddingLink] = useState(false);
  const [isEditingLink, setIsEditingLink] = useState(false);
  const [currentLink, setCurrentLink] = useState<SocialLink | null>(null);
  const [newLink, setNewLink] = useState<Partial<SocialLink>>({
    platform: "",
    url: "",
  });

  const socialLinks = content?.footer?.socialLinks || [];

  const handleAddLink = () => {
    if (!newLink.platform || !newLink.url) {
      toast({
        title: "Missing information",
        description: "Please fill in all required fields.",
        variant: "destructive",
      });
      return;
    }

    addSocialLink({
      id: "", // Will be generated by the context
      platform: newLink.platform,
      url: newLink.url,
    });

    setNewLink({
      platform: "",
      url: "",
    });

    setIsAddingLink(false);
    toast({
      title: "Social link added",
      description: "New social media link has been added successfully.",
    });
  };

  const handleEditLink = () => {
    if (
      !currentLink ||
      !currentLink.id ||
      !currentLink.platform ||
      !currentLink.url
    ) {
      toast({
        title: "Missing information",
        description: "Please fill in all required fields.",
        variant: "destructive",
      });
      return;
    }

    updateSocialLink(currentLink.id, {
      platform: currentLink.platform,
      url: currentLink.url,
    });

    setCurrentLink(null);
    setIsEditingLink(false);
    toast({
      title: "Social link updated",
      description: "Social media link has been updated successfully.",
    });
  };

  const handleDeleteLink = (id: string) => {
    deleteSocialLink(id);
    toast({
      title: "Social link deleted",
      description: "Social media link has been removed successfully.",
    });
  };

  const getSocialIcon = (platform: string) => {
    const iconProps = { className: "h-5 w-5 text-amber-600 dark:text-gold" };

    switch (platform.toLowerCase()) {
      case "facebook":
        return <Facebook {...iconProps} />;
      case "instagram":
        return <Instagram {...iconProps} />;
      case "twitter":
        return <X {...iconProps} />;
      case "linkedin":
        return <Linkedin {...iconProps} />;
      case "youtube":
        return <Youtube {...iconProps} />;
      case "google business":
      case "google":
        return <Building2 {...iconProps} />;
      case "website":
        return <Globe {...iconProps} />;
      default:
        return <ExternalLink {...iconProps} />;
    }
  };

  return (
    <div className="space-y-4">
      <div className="flex justify-between items-center">
        <h3 className="text-lg font-semibold text-amber-600 dark:text-gold">
          Social Media Links
        </h3>
        <Button
          onClick={() => setIsAddingLink(true)}
          className="bg-amber-600 dark:bg-gold text-white dark:text-black"
        >
          <Plus className="mr-2 h-4 w-4" />
          Add Social Link
        </Button>
      </div>

      {/* List of existing social links */}
      <div className="space-y-2">
        {socialLinks.length === 0 ? (
          <p className="text-gray-500 dark:text-gray-400 text-sm italic">
            No social links added yet. Add your first social media link.
          </p>
        ) : (
          socialLinks.map((link) => (
            <div
              key={link.id}
              className="flex items-center justify-between p-3 bg-white dark:bg-gray-800 rounded-md border border-gray-200 dark:border-gray-700"
            >
              <div className="flex items-center space-x-3">
                {getSocialIcon(link.platform)}
                <div>
                  <p className="font-medium">{link.platform}</p>
                  <a
                    href={link.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-sm text-blue-500 hover:underline"
                  >
                    {link.url}
                  </a>
                </div>
              </div>
              <div className="flex space-x-2">
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => {
                    setCurrentLink(link);
                    setIsEditingLink(true);
                  }}
                  className="border-amber-600/50 dark:border-gold/50"
                >
                  <Edit className="h-4 w-4 text-amber-600 dark:text-gold" />
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => handleDeleteLink(link.id)}
                  className="border-red-500/50 dark:border-red-400/50"
                >
                  <Trash className="h-4 w-4 text-red-500 dark:text-red-400" />
                </Button>
              </div>
            </div>
          ))
        )}
      </div>

      {/* Add Social Link Dialog */}
      <Dialog open={isAddingLink} onOpenChange={setIsAddingLink}>
        <DialogContent className="bg-white dark:bg-gray-900 text-black dark:text-white">
          <DialogHeader>
            <DialogTitle className="text-amber-600 dark:text-gold">
              Add Social Media Link
            </DialogTitle>
          </DialogHeader>
          <div className="space-y-4 py-4">
            <div className="space-y-2">
              <label className="text-sm font-medium">Platform</label>
              <Select
                value={newLink.platform}
                onValueChange={(value) =>
                  setNewLink({ ...newLink, platform: value })
                }
              >
                <SelectTrigger className="bg-white dark:bg-gray-800">
                  <SelectValue placeholder="Select platform" />
                </SelectTrigger>
                <SelectContent className="bg-white dark:bg-gray-800">
                  <SelectItem value="Facebook">Facebook</SelectItem>
                  <SelectItem value="Instagram">Instagram</SelectItem>
                  <SelectItem value="Twitter">Twitter (X)</SelectItem>
                  <SelectItem value="LinkedIn">LinkedIn</SelectItem>
                  <SelectItem value="YouTube">YouTube</SelectItem>
                  <SelectItem value="Google Business">
                    Google Business
                  </SelectItem>
                  <SelectItem value="LinkedIn">LinkedIn</SelectItem>
                  <SelectItem value="Website">Website</SelectItem>
                  <SelectItem value="Other">Other</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <div className="space-y-2">
              <label className="text-sm font-medium">URL</label>
              <Input
                value={newLink.url}
                onChange={(e) =>
                  setNewLink({ ...newLink, url: e.target.value })
                }
                placeholder="https://"
                className="bg-white dark:bg-gray-800"
              />
            </div>
          </div>
          <DialogFooter>
            <Button
              variant="outline"
              onClick={() => setIsAddingLink(false)}
              className="border-gray-300 dark:border-gray-600"
            >
              Cancel
            </Button>
            <Button
              onClick={handleAddLink}
              className="bg-amber-600 dark:bg-gold text-white dark:text-black"
            >
              Add Link
            </Button>
          </DialogFooter>
        </DialogContent>
      </Dialog>

      {/* Edit Social Link Dialog */}
      <Dialog open={isEditingLink} onOpenChange={setIsEditingLink}>
        <DialogContent className="bg-white dark:bg-gray-900 text-black dark:text-white">
          <DialogHeader>
            <DialogTitle className="text-amber-600 dark:text-gold">
              Edit Social Media Link
            </DialogTitle>
          </DialogHeader>
          {currentLink && (
            <div className="space-y-4 py-4">
              <div className="space-y-2">
                <label className="text-sm font-medium">Platform</label>
                <Select
                  value={currentLink.platform}
                  onValueChange={(value) =>
                    setCurrentLink({ ...currentLink, platform: value })
                  }
                >
                  <SelectTrigger className="bg-white dark:bg-gray-800">
                    <SelectValue placeholder="Select platform" />
                  </SelectTrigger>
                  <SelectContent className="bg-white dark:bg-gray-800">
                    <SelectItem value="Facebook">Facebook</SelectItem>
                    <SelectItem value="Instagram">Instagram</SelectItem>
                    <SelectItem value="Twitter">Twitter (X)</SelectItem>
                    <SelectItem value="LinkedIn">LinkedIn</SelectItem>
                    <SelectItem value="YouTube">YouTube</SelectItem>
                    <SelectItem value="Google Business">
                      Google Business
                    </SelectItem>
                    <SelectItem value="Website">Website</SelectItem>
                    <SelectItem value="Other">Other</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div className="space-y-2">
                <label className="text-sm font-medium">URL</label>
                <Input
                  value={currentLink.url}
                  onChange={(e) =>
                    setCurrentLink({ ...currentLink, url: e.target.value })
                  }
                  placeholder="https://"
                  className="bg-white dark:bg-gray-800"
                />
              </div>
            </div>
          )}
          <DialogFooter>
            <Button
              variant="outline"
              onClick={() => {
                setCurrentLink(null);
                setIsEditingLink(false);
              }}
              className="border-gray-300 dark:border-gray-600"
            >
              Cancel
            </Button>
            <Button
              onClick={handleEditLink}
              className="bg-amber-600 dark:bg-gold text-white dark:text-black"
            >
              Save Changes
            </Button>
          </DialogFooter>
        </DialogContent>
      </Dialog>
    </div>
  );
};

export default SocialLinksManager;
